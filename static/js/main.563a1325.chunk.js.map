{"version":3,"sources":["components/Wrapper/Wrapper.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","components/Utils/Helpers.js","App.js","index.js"],"names":["Wrapper","children","className","Form","state","name","number","nameInputId","shortid","generate","namberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onAddContact","props","reset","this","onSubmit","htmlFor","type","onChange","Component","Filter","ContactList","options","onDeleteContact","map","id","key","onClick","getFromLS","items","localStorage","getItem","JSON","parse","error","Error","App","contacts","filter","addContact","alert","some","contact","changeFilter","deleteContact","contactId","getVisibleContacts","normalizedFilter","toLowerCase","includes","prevProps","prevState","setItem","stringify","saveToLS","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.563a1325.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Wrapper.scss';\n\nconst Wrapper = ({ children }) => {\n  return <section className=\"wrapper\">{children}</section>;\n};\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrapper;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortid from 'shortid';\nimport './Form.scss';\n\nclass Form extends Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  nameInputId = shortid.generate();\n  namberInputId = shortid.generate();\n\n  handleChange = event => {\n    const { name, value } = event.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = event => {\n    event.preventDefault();\n    const { onAddContact } = this.props;\n    onAddContact(this.state);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n\n  render() {\n    const { name, number } = this.state;\n    return (\n      <>\n        <form className=\"form_container\" onSubmit={this.handleSubmit}>\n          <p>Name</p>\n          <label htmlFor={this.nameInputId}>\n            <input\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <p>Number</p>\n          <label htmlFor={this.namberInputId}>\n            <input\n              className=\"form_label\"\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <br />\n          <button className=\"button\" type=\"submit\">\n            Add contakt\n          </button>\n        </form>\n      </>\n    );\n  }\n}\n\nForm.propTypes = {\n  onAddContact: PropTypes.func.isRequired,\n};\n\nexport default Form;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <p>Find contacts by name</p>\n      <label>\n        <input type=\"text\" value={value} onChange={onChange} />\n      </label>\n    </>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './ContactList.scss';\n\nconst ContactList = ({ options, onDeleteContact }) => {\n  return (\n    <>\n      <ul className=\"contact_list\">\n        {options.map(({ id, name, number }) => (\n          <li className=\"contact_item\" key={id}>\n            <span>\n              {name}: {number}\n            </span>\n            <button className=\"button-del\" onClick={() => onDeleteContact(id)}>\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\nContactList.propTypes = {\n  option: PropTypes.exact({\n    id: PropTypes.string,\n    name: PropTypes.string,\n    number: PropTypes.number,\n  }),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","export const saveToLS = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    throw new Error();\r\n  }\r\n};\r\nexport const getFromLS = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (error) {\r\n    throw new Error();\r\n  }\r\n};\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\n\nimport Wrapper from './components/Wrapper';\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\n\nimport { saveToLS, getFromLS } from './components/Utils/Helpers';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    this.setState({ contacts: getFromLS('contacts') });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n    if (contacts !== prevState.contacts) {\n      saveToLS('contacts', contacts);\n    }\n  }\n\n  addContact = ({ name, number }) => {\n    if (name === '') {\n      return alert('Please, fill out the form!');\n    }\n    const isExist = this.state.contacts.some(contact => contact.name === name);\n    if (isExist) {\n      return alert(`${name} is already in contacts`);\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n\n  changeFilter = event => {\n    this.setState({ filter: event.currentTarget.value });\n  };\n  deleteContact = contactId => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n  getVisibleContacts = () => {\n    const { contacts, filter } = this.state;\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter),\n    );\n  };\n\n  render() {\n    const { filter } = this.state;\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <Wrapper>\n        <h1>Phonebook</h1>\n        <Form onAddContact={this.addContact} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onChange={this.changeFilter} />\n        <ContactList\n          options={visibleContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
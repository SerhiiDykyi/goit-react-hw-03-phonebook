{"version":3,"sources":["components/Wrapper/Wrapper.js","components/Form/Form.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","Utils/Helpers.js","index.js"],"names":["Wrapper","children","className","Form","state","name","number","nameInputId","shortid","generate","namberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onAddContact","props","reset","this","onSubmit","htmlFor","id","type","onChange","Component","Filter","ContactList","options","onDeleteContact","map","key","onClick","App","contacts","filter","addContact","alert","some","contact","changeFilter","deleteContact","contactId","getVisibleContacts","normalizedFilter","toLowerCase","includes","getContactsFromLS","items","localStorage","getItem","JSON","parse","error","Error","getFromLS","prevProps","prevState","setItem","stringify","saveToLS","visibleContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e72e545.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Wrapper.scss';\r\n\r\nconst Wrapper = ({ children }) => {\r\n  return <section className=\"wrapper\">{children}</section>;\r\n};\r\nWrapper.propTypes = {\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default Wrapper;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport './Form.scss';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  namberInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { onAddContact } = this.props;\r\n    onAddContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form className=\"form_container\" onSubmit={this.handleSubmit}>\r\n          <p>Name</p>\r\n          <label htmlFor={this.nameInputId}>\r\n            <input\r\n              id={this.nameInputId}\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <p>Number</p>\r\n          <label htmlFor={this.namberInputId}>\r\n            <input\r\n              id={this.namberInputId}\r\n              className=\"form_label\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button className=\"button\" type=\"submit\">\r\n            Add contakt\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Filter = ({ value, onChange }) => {\r\n  return (\r\n    <>\r\n      <p>Find contacts by name</p>\r\n      <label>\r\n        <input type=\"text\" value={value} onChange={onChange} />\r\n      </label>\r\n    </>\r\n  );\r\n};\r\nFilter.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './ContactList.scss';\r\n\r\nconst ContactList = ({ options, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      <ul className=\"contact_list\">\r\n        {options.map(({ id, name, number }) => (\r\n          <li className=\"contact_item\" key={id}>\r\n            <span>\r\n              {name}: {number}\r\n            </span>\r\n            <button className=\"button-del\" onClick={() => onDeleteContact(id)}>\r\n              Delete\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n};\r\nContactList.propTypes = {\r\n  option: PropTypes.exact({\r\n    id: PropTypes.string,\r\n    name: PropTypes.string,\r\n    number: PropTypes.number,\r\n  }),\r\n  onDeleteContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\n\r\nimport Wrapper from './components/Wrapper';\r\nimport Form from './components/Form';\r\nimport Filter from './components/Filter';\r\nimport ContactList from './components/ContactList';\r\n\r\nimport { saveToLS, getFromLS } from './Utils/Helpers';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [],\r\n    filter: '',\r\n  };\r\n\r\n  componentDidMount() {\r\n    const getContactsFromLS = getFromLS('contacts');\r\n    if (getContactsFromLS) {\r\n      this.setState({ contacts: getContactsFromLS });\r\n    }\r\n    // this.setState({ contacts: getFromLS('contacts') });\r\n    // const contacts = localStorage.getItem('contacts');\r\n    // const parsedContacts = JSON.parse(contacts);\r\n\r\n    // if (parsedContacts) {\r\n    //   this.setState({ contacts: parsedContacts });\r\n    // }\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    // if (this.state.contacts !== prevState.contacts) {\r\n    //   localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\r\n    // }\r\n    const { contacts } = this.state;\r\n    if (contacts !== prevState.contacts) {\r\n      saveToLS('contacts', contacts);\r\n    }\r\n  }\r\n\r\n  addContact = ({ name, number }) => {\r\n    if (name === '') {\r\n      return alert('Please, fill out the form!');\r\n    }\r\n    const isExist = this.state.contacts.some(contact => contact.name === name);\r\n    if (isExist) {\r\n      return alert(`${name} is already in contacts`);\r\n    }\r\n    const contact = {\r\n      id: shortid.generate(),\r\n      name,\r\n      number,\r\n    };\r\n    this.setState(({ contacts }) => ({\r\n      contacts: [...contacts, contact],\r\n    }));\r\n  };\r\n\r\n  changeFilter = event => {\r\n    this.setState({ filter: event.currentTarget.value });\r\n  };\r\n  deleteContact = contactId => {\r\n    this.setState(({ contacts }) => ({\r\n      contacts: contacts.filter(contact => contact.id !== contactId),\r\n    }));\r\n  };\r\n  getVisibleContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normalizedFilter = filter.toLowerCase();\r\n    return contacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(normalizedFilter),\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const visibleContacts = this.getVisibleContacts();\r\n    return (\r\n      <Wrapper>\r\n        <h1>Phonebook</h1>\r\n        <Form onAddContact={this.addContact} />\r\n        <h2>Contacts</h2>\r\n        <Filter value={filter} onChange={this.changeFilter} />\r\n        <ContactList\r\n          options={visibleContacts}\r\n          onDeleteContact={this.deleteContact}\r\n        />\r\n      </Wrapper>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","export const saveToLS = (key, value) => {\r\n  try {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  } catch (error) {\r\n    throw new Error();\r\n  }\r\n};\r\nexport const getFromLS = key => {\r\n  try {\r\n    const items = localStorage.getItem(key);\r\n    return items ? JSON.parse(items) : null;\r\n  } catch (error) {\r\n    throw new Error();\r\n  }\r\n};\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport 'modern-normalize/modern-normalize.css';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}
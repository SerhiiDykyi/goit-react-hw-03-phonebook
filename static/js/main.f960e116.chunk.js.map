{"version":3,"sources":["components/Wrapper/Wrapper.js","components/Form/Form.js","App.js","index.js"],"names":["Wrapper","children","className","Form","state","name","number","nameInputId","shortid","generate","namberInputId","handleChange","event","currentTarget","value","setState","handleSubmit","preventDefault","onAddContact","props","reset","this","onSubmit","htmlFor","type","onChange","Component","App","contacts","filter","addContact","alert","some","contact","id","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TAWeA,G,MAPC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACjB,OAAO,6BAASC,UAAU,WAAWD,K,OC+DxBE,G,kNA9DbC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,YAAcC,IAAQC,W,EACtBC,cAAgBF,IAAQC,W,EAExBE,aAAe,SAAAC,GAAU,IAAD,EACEA,EAAMC,cAAtBR,EADc,EACdA,KAAMS,EADQ,EACRA,MACd,EAAKC,SAAL,eAAiBV,EAAOS,K,EAG1BE,aAAe,SAAAJ,GACbA,EAAMK,kBAENC,EADyB,EAAKC,MAAtBD,cACK,EAAKd,OAClB,EAAKgB,S,EAGPA,MAAQ,WACN,EAAKL,SAAS,CAAEV,KAAM,GAAIC,OAAQ,M,uDAG1B,IAAD,EACkBe,KAAKjB,MAAtBC,EADD,EACCA,KAAMC,EADP,EACOA,OACd,OACE,oCACE,0BAAMJ,UAAU,iBAAiBoB,SAAUD,KAAKL,cAC9C,mCACA,2BAAOO,QAASF,KAAKd,aACnB,2BACEiB,KAAK,OACLnB,KAAK,OACLS,MAAOT,EACPoB,SAAUJ,KAAKV,gBAGnB,qCACA,2BAAOY,QAASF,KAAKX,eACnB,2BACER,UAAU,aACVsB,KAAK,MACLnB,KAAK,SACLS,MAAOR,EACPmB,SAAUJ,KAAKV,gBAGnB,6BACA,4BAAQT,UAAU,SAASsB,KAAK,UAAhC,qB,GAlDSE,cCgCJC,E,4MAhCbvB,MAAQ,CACNwB,SAAU,GACVC,OAAQ,I,EAGVC,WAAa,YAAuB,IAApBzB,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OACpB,GAAa,KAATD,EACF,OAAO0B,MAAM,8BAGf,GADgB,EAAK3B,MAAMwB,SAASI,MAAK,SAAAC,GAAO,OAAIA,EAAQ5B,OAASA,KAEnE,OAAO0B,MAAM,GAAD,OAAI1B,EAAJ,4BAEd,IAAM4B,EAAU,CACdC,GAAI1B,IAAQC,WACZJ,OACAC,UAEF,EAAKS,UAAS,gBAAGa,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,GAAD,mBAAMA,GAAN,CAAgBK,S,uDAI1B,OACE,kBAAC,EAAD,KACE,yCACA,kBAAC,EAAD,CAAMf,aAAcG,KAAKS,kB,GA3BfJ,a,MCClBS,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.f960e116.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Wrapper.scss';\n\nconst Wrapper = ({ children }) => {\n  return <section className=\"wrapper\">{children}</section>;\n};\nWrapper.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Wrapper;\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\nimport './Form.scss';\r\n\r\nclass Form extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  nameInputId = shortid.generate();\r\n  namberInputId = shortid.generate();\r\n\r\n  handleChange = event => {\r\n    const { name, value } = event.currentTarget;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = event => {\r\n    event.preventDefault();\r\n    const { onAddContact } = this.props;\r\n    onAddContact(this.state);\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <>\r\n        <form className=\"form_container\" onSubmit={this.handleSubmit}>\r\n          <p>Name</p>\r\n          <label htmlFor={this.nameInputId}>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <p>Number</p>\r\n          <label htmlFor={this.namberInputId}>\r\n            <input\r\n              className=\"form_label\"\r\n              type=\"tel\"\r\n              name=\"number\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <br />\r\n          <button className=\"button\" type=\"submit\">\r\n            Add contakt\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nForm.propTypes = {\r\n  onAddContact: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Form;\r\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport Wrapper from './components/Wrapper';\nimport Form from './components/Form';\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  addContact = ({ name, number }) => {\n    if (name === '') {\n      return alert('Please, fill out the form!');\n    }\n    const isExist = this.state.contacts.some(contact => contact.name === name);\n    if (isExist) {\n      return alert(`${name} is already in contacts`);\n    }\n    const contact = {\n      id: shortid.generate(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [...contacts, contact],\n    }));\n  };\n  render() {\n    return (\n      <Wrapper>\n        <h1>Phonebook</h1>\n        <Form onAddContact={this.addContact} />\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}